{"version":3,"sources":["img/bg.jpg","api/api.ts","redux/photosMars-reduser.ts","components/commons/selector.tsx","components/search/search.tsx","components/search/search-Container.tsx","components/imgHolder/imgHolder.tsx","components/imgHolder/imgHolder-Container.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["photosMarsAPI","dataRequestApi","errorCallBeck","key","axios","get","rover","sol","page","camera","then","response","data","photos","catch","err","console","error","initialaseState","cameras","label","value","rovers","currentPage","isFetching","curentSearch","actions","type","peyload","requestPhotos","isLoadMore","dispatch","setErrorCB","a","photosMarsReduser","state","action","concat","Option","Select","Selector","selects","setSelected","defaultValue","onChange","map","op","i","Search","useState","setCamera","setRover","setSol","initialValues","onSubmit","handleSubmit","className","name","min","max","onClick","icon","SearchOutlined","compose","connect","photosMars","ImgHolder","React","memo","Puginator","length","p","src","img_src","alt","earth_date","id","Header","Layout","Footer","Content","App","imgBG","theme","mode","defaultSelectedKeys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.089b09eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.ca1f9b25.jpg\";","import axios from \"axios\"\r\nimport { DataRequestApiT, PhotoT } from './../types'\r\n\r\ntype GetphotosMarsApiT = {\r\n  photos: PhotoT[]\r\n}\r\n\r\nexport const photosMarsAPI = {\r\n  get (dataRequestApi: DataRequestApiT, errorCallBeck: (error: string)=>void, key='DEMO_KEY') {\r\n    return axios.get<GetphotosMarsApiT>(\r\n      `https://api.nasa.gov/mars-photos/api/v1/rovers/${dataRequestApi.rover}/photos?sol=${dataRequestApi.sol}&page=${dataRequestApi.page}&camera=${dataRequestApi.camera}&api_key=${key}`\r\n    ).then(response => {\r\n      return (response.data.photos as PhotoT[])\r\n    })\r\n    .catch(err => {\r\n      console.error(err)\r\n      errorCallBeck(''+err)\r\n    })\r\n  },\r\n}","import { DataRequestApiT } from './../types'\r\nimport { photosMarsAPI } from \"../api/api\"\r\nimport { PhotoT } from \"../types\"\r\nimport { BaseThunkT, InferActionsT } from \"./redux-store\"\r\n\r\ntype ActionsT = InferActionsT<typeof actions>\r\ntype ThunkT = BaseThunkT<ActionsT>\r\nexport type InitialaseStateT = typeof initialaseState\r\n\r\nlet initialaseState = { \r\n  photos: [] as PhotoT[],\r\n  cameras: [\r\n    {\r\n      label: \"Front Hazard Avoidance Camera\",\r\n      value: \"fhaz\",\r\n    },\r\n    {\r\n      label: \"Rear Hazard Avoidance Camera\",\r\n      value: \"rhaz\",\r\n    },\r\n    {\r\n      label: \"Mast Camera\",\r\n      value: \"mast\",\r\n    },\r\n    {\r\n      label: \"Chemistry and Camera Complex\",\r\n      value: \"chemcam\",\r\n    },\r\n    {\r\n      label: \"Mars Hand Lens Imager\",\r\n      value: \"mahli\",\r\n    },\r\n    {\r\n      label: \"Mars Descent Imager\",\r\n      value: \"mardi\",\r\n    },\r\n    {\r\n      label: \"Navigation Camera\",\r\n      value: \"navcam\",\r\n    },\r\n    {\r\n      label: \"Panoramic Camera\",\r\n      value: \"pancam\",\r\n    },\r\n    {\r\n      label: \"Miniature Thermal Emission Spectrometer\",\r\n      value: \"minites\",\r\n    },\r\n  ],\r\n  rovers: [\r\n    {\r\n      label: \"Curiosity\",\r\n      value: \"curiosity\",\r\n    },\r\n    {\r\n      label: \"Opportunity\",\r\n      value: \"opportunity\",\r\n    },\r\n    {\r\n      label: \"Spirit\",\r\n      value: \"spirit\",\r\n    },\r\n  ],\r\n  currentPage: 1 as number,\r\n  isFetching: false as boolean,\r\n  curentSearch: null as DataRequestApiT | null,\r\n  error: '',\r\n}\r\n\r\nconst photosMarsReduser = (state = initialaseState, action: ActionsT): InitialaseStateT => {\r\n  switch (action.type) {\r\n    case 'SET_PHOTOS':\r\n    case 'SET_CURRENT_SEARCH':\r\n    case 'SET_ERROR':\r\n    case 'TOGGLE_IS_FECHING': {\r\n      return {...state, ...action.peyload}\r\n    }\r\n    case 'SET_MORE_PHOTOS': {\r\n      return {\r\n        ...state,\r\n        photos: state.photos.concat(action.photos),\r\n        error: '',\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setPhotos: (photos: PhotoT[]) => ({type: 'SET_PHOTOS', peyload:{photos, error: ''}} as const),\r\n  setMorePhotos: (photos: PhotoT[]) => ({type: 'SET_MORE_PHOTOS', photos} as const),\r\n  setCurrentSearch: (curentSearch: DataRequestApiT) => ({type: 'SET_CURRENT_SEARCH', peyload:{curentSearch}} as const),\r\n  toggleIsFeching: (isFetching: boolean) => ({type: 'TOGGLE_IS_FECHING', peyload:{isFetching}} as const),\r\n  setError: (error: string) => ({type: 'SET_ERROR', peyload:{error}} as const),\r\n}\r\n\r\nexport const requestPhotos = (dataRequestApi: DataRequestApiT, isLoadMore=false):ThunkT => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.toggleIsFeching(true))\r\n    dispatch(actions.setCurrentSearch(dataRequestApi))\r\n\r\n    function setErrorCB(error: string) {\r\n      dispatch(actions.setError(error))\r\n    }\r\n    \r\n    const data = await photosMarsAPI.get(dataRequestApi, setErrorCB)\r\n    if (data) {\r\n      isLoadMore \r\n      ? dispatch(actions.setMorePhotos(data as PhotoT[]))\r\n      : dispatch(actions.setPhotos(data as PhotoT[]))\r\n    }\r\n    dispatch(actions.toggleIsFeching(false))\r\n  }\r\n}\r\n\r\nexport default photosMarsReduser","import { Select } from \"antd\"\r\nimport React from \"react\"\r\nimport { SelectsT } from \"../../types\"\r\nconst {Option} = Select\r\ntype propsSelectorT = {\r\n  selects: SelectsT\r\n  setSelected: (value: string) => void\r\n}\r\n\r\nexport const Selector:React.FC<propsSelectorT> = ({selects, setSelected}) => {\r\n  return <>\r\n    <Select \r\n      defaultValue={selects[0].label}\r\n      onChange={value => {setSelected(value)}}\r\n    >\r\n      {selects.map((op, i) => (<Option value={op.value} key={i}>{op.label}</Option>))}\r\n    </Select>\r\n  </>\r\n}","import \"./search.less\"\r\nimport React, { useState } from \"react\"\r\nimport { DataRequestApiT, SelectsT } from \"../../types\"\r\nimport { Form, Formik } from \"formik\"\r\nimport { Selector } from \"../commons/selector\"\r\nimport { FormItem } from \"formik-antd\"\r\nimport { Button, InputNumber } from \"antd\"\r\nimport { SearchOutlined } from '@ant-design/icons'\r\n\r\ntype PropsT = {\r\n  cameras: SelectsT\r\n  rovers: SelectsT\r\n  error: string\r\n  requestPhotos: (\r\n    dataRequestApi:DataRequestApiT \r\n  ) => void\r\n}\r\n\r\nconst Search:React.FC<PropsT> = ({cameras, rovers, error, requestPhotos}) => {\r\n  const [camera, setCamera] = useState('fhaz')\r\n  const [rover, setRover] = useState('curiosity')\r\n  const [sol, setSol] = useState(0)\r\n\r\n  return<>\r\n  \r\n    <Formik\r\n      initialValues={{\r\n        sol: 1,\r\n      }}\r\n      onSubmit={() => {\r\n        requestPhotos({\r\n          page: 1,\r\n          camera: camera,\r\n          rover: rover,\r\n          sol: sol,\r\n        })\r\n      }}\r\n    >\r\n      {({handleSubmit}) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <div className='searchContainer'>\r\n            <Selector selects={cameras} setSelected={setCamera}/>\r\n            <Selector selects={rovers} setSelected={setRover}/>\r\n            <FormItem name=\"Search-form\">\r\n              <InputNumber  \r\n                name='sol'\r\n                min={0}\r\n                max={2000}\r\n                defaultValue={0}\r\n                onChange={(value)=>{setSol(value)}}\r\n              />\r\n            </FormItem>\r\n            <Button \r\n              onClick={()=>handleSubmit()} \r\n              icon={<SearchOutlined/>} \r\n            >Search</Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n    {error ? <div className='error'>{error}</div> : null}\r\n  </>\r\n}\r\n\r\nexport default Search","import { compose } from \"redux\"\r\nimport { connect } from 'react-redux'\r\nimport { AppStateT } from \"../../redux/redux-store\"\r\nimport { requestPhotos } from \"../../redux/photosMars-reduser\"\r\nimport Search from \"./search\"\r\n\r\nlet mapStateToProps = (state: AppStateT) => ({\r\n  cameras: state.photosMars.cameras,\r\n  rovers: state.photosMars.rovers,\r\n  error: state.photosMars.error,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect (mapStateToProps, {requestPhotos})\r\n) (Search)","import \"./imgHolder.css\"\r\nimport React from \"react\"\r\nimport { DataRequestApiT, PhotoT } from \"../../types\"\r\nimport { Button } from \"antd\"\r\n\r\ntype PropsT = {\r\n  photos: PhotoT[]\r\n  isFetching: boolean\r\n  curentSearch: DataRequestApiT\r\n  requestPhotos: (\r\n    dataRequestApi:DataRequestApiT,\r\n    isLoadMore:boolean,\r\n  ) => void\r\n}\r\n\r\nconst ImgHolder:React.FC<PropsT> = React.memo(({photos, isFetching, curentSearch, requestPhotos}) => {\r\n  function Puginator() {\r\n    if (curentSearch && photos.length > 24) {\r\n      return <Button onClick={()=>{\r\n        curentSearch.page++\r\n        requestPhotos(curentSearch, true)\r\n      }}>\r\n        Load more...\r\n      </Button>\r\n    }\r\n  }\r\n\r\n  function Content() {\r\n    if (isFetching) return <div>Loading...</div>\r\n    else if (photos.length) {\r\n      return <>\r\n        <div className=\"Img-Container\">\r\n          {photos.map(p => <img \r\n            key={p.id} \r\n            src={p.img_src} \r\n            alt={p.earth_date} \r\n            className='img'\r\n            />)}\r\n        </div>\r\n          {Puginator()}\r\n      </>\r\n    }\r\n    else return <>\r\n      Please enter data for search.\r\n      {Puginator()}\r\n    </>\r\n  }\r\n\r\n  return<>\r\n    <div className='Content-Container'>\r\n      {Content()}\r\n    </div>\r\n  </>\r\n})\r\n\r\nexport default ImgHolder","import { compose } from \"redux\"\r\nimport { connect } from 'react-redux'\r\nimport { AppStateT } from \"../../redux/redux-store\"\r\nimport { requestPhotos } from \"../../redux/photosMars-reduser\"\r\nimport ImgHolder from \"./imgHolder\"\r\n\r\nlet mapStateToProps = (state: AppStateT) => ({\r\n  photos: state.photosMars.photos,\r\n  curentSearch: state.photosMars.curentSearch,\r\n  isFetching: state.photosMars.isFetching,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect (mapStateToProps, {requestPhotos})\r\n) (ImgHolder)","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport imgBG from './img/bg.jpg'\nimport 'antd/dist/antd.css'\nimport './App.less';\nimport SearchContainer from './components/search/search-Container'\nimport ImgHolderContainer from './components/imgHolder/imgHolder-Container'\nconst { Header, Footer, Content } = Layout\n\nconst App = () => {\n  return <div>\n    <img className='imgBG' src={imgBG} alt='BG' />\n    <div className='App'>\n      <Layout className='Layout'>\n        <Header className='header'>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n            <SearchContainer/>\n          </Menu>\n          <h1 className='Title'>Mars Rover Photos</h1>\n        </Header >\n        <Content className='MainContent'>\n          <ImgHolderContainer/>\n        </Content>\n        <Footer className='Footer'>Created at 31.08.2021</Footer>\n      </Layout>\n    </div>\n  </div>\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore, Action } from \"redux\"\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport photosMarsReduser from \"./photosMars-reduser\"\r\n\r\nconst rootReducer = combineReducers({\r\n  photosMars: photosMarsReduser,\r\n})\r\n\r\nconst initialState = {}\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n  )\r\n)\r\n\r\nexport default store\r\n\r\ntype rootReducerType = typeof rootReducer\r\nexport type AppStateT = ReturnType<rootReducerType>\r\nexport type InferActionsT<T> = T extends {[keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type BaseThunkT<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateT, unknown, A>","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n </BrowserRouter>,\n  document.getElementById('root')\n)\n\nreportWebVitals()"],"sourceRoot":""}